version: 2
jobs:
  test:
    working_directory: ~/src
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          BUNDLE_PATH: vendor/bundle
          HOST: http://example.com
          PGHOST: 127.0.0.1
          PGUSER: lockstep
          RAILS_ENV: test
          # env vars used in app
          AIRBRAKE_API_KEY: my_secret_api_key
          AIRBRAKE_PROJECT_ID: 123456
          DISQUS_SHORTNAME: my_disqus
          MAILCHIMP_API_KEY: 200e3000795e57499c6cfedebacf5f7c-us11
          MAILCHIMP_LIST_ID: 57fc12c58e
          SLACK_WEBHOOK_URL: my_url
          STRIPE_KEY: my_stripe_key
          STRIPE_SECRET: my_stripe_secret
      - image: circleci/postgres:9-alpine-ram
        environment:
          POSTGRES_DB: TMC_test
          POSTGRES_USER: lockstep
      - image: elasticsearch:2.4.6-alpine
    steps:
      - checkout

      # - restore_cache:
      #     key: yarn-{{ checksum "yarn.lock" }}

      # - run:
      #     name: Install yarn dependencies
      #     command: yarn install

      # - save_cache:
      #     key: yarn-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/.yarn-cache

      - restore_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install bundle
          command: bin/bundle install --path vendor/bundle

      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # - run:
      #     name: Verify bundle security
      #     command: bundle exec bundle-audit check --update

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run:
          name: Set up database
          command: |
            bundle exec rake db:create && bundle exec rake db:schema:load

      # Environment setup
      # - run:
      #     name: Set up app environment
      #     command: cp config/application.yml.example config/application.yml

      # Run rspec in parallel
      - run:
          name: Run tests
          type: shell
          command: |
            bundle exec rspec \
              --profile 10 \
              --format RspecJunitFormatter \
              --out test_results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results:
          path: test_results

  deploy-master:
    machine:
      enabled: true
    working_directory: ~/src
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            heroku run rake db:migrate --app $HEROKU_APP_NAME

  deploy-staging:
    machine:
      enabled: true
    working_directory: ~/src
    steps:
      - checkout
      - run:
          name: Deploy Development to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME-staging.git development:master
            heroku run rake db:migrate --app $HEROKU_APP_NAME-staging

workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - deploy-master:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - test
          filters:
            branches:
              only: development
