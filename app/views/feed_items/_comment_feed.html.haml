%section.post-comment
  - if user_signed_in?
    = form_for FeedItem.new, url: create_comment_url do |f|
      .row
        .col-sm-12
          .form-group.post-input
            .direct-image-upload
              .input
                = f.hidden_field :raw_image_s3_key
                = f.text_area :message, rows: 4, class: 'form-control',
                  placeholder: t('feed_items.add_comment_placeholder')
              .status
                .background
                .message
                  .ready-message
                    = t('upload_image.drop_an_image_to_upload')
                  .uploading-message
                    = t('upload_image.uploading_the_image')
              .pull-left.form-control-feedback
            = f.submit "POST", class: 'btn btn-cart'
  - else
    .text-xs-center= t('feed_items.sign_in_to_post_comments_html',
      sign_in: new_user_session_path, sign_up: new_user_registration_path)

%section.comments.m-y-3
  .comments.m-t-2
    - if comments.empty?
      %div No comments available
    - comments.each do |comment|
      .row.m-b-2
        .col-sm-2.text-center
          .profile
            .avatar{style: "background-image:url(#{comment.author_avatar.url(:thumb)})"}
        .col-sm-10
          .author.m-b-1
            = comment.author_full_name
            %span
              = " Â· #{comment.author_position} at #{comment.author_organization_name}"
            %small.pull-right
              = "#{time_ago_in_words(comment.created_at)} ago"
          .comment{ id: "comment-#{comment.id}" }
            = simple_format(comment.message)
            .comment-image
              - if comment.image?
                = image_tag comment.image.url(:large)
              - elsif comment.raw_image_s3_key.present?
                %small.missing-image
                  %i= t('.attached_image_is_being_resized')
    .text-center
      = paginate comments

